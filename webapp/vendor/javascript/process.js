var e=[];var n=false;var r;var a=-1;function cleanUpNextTick(){if(n&&r){n=false;r.length?e=r.concat(e):a=-1;e.length&&drainQueue()}}function drainQueue(){if(!n){var t=setTimeout(cleanUpNextTick,0);n=true;var o=e.length;while(o){r=e;e=[];while(++a<o)r&&r[a].run();a=-1;o=e.length}r=null;n=false;clearTimeout(t)}}function nextTick(r){var a=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)a[t-1]=arguments[t];e.push(new Item(r,a));1!==e.length||n||setTimeout(drainQueue,0)}function Item(e,n){this.fun=e;this.array=n}Item.prototype.run=function(){this.fun.apply(null,this.array)};var t="browser";var o="x64";var i="browser";var v={NODE_ENV:"production",PATH:"/usr/bin",LANG:navigator.language+".UTF-8",PWD:"/",HOME:"/home",TMP:"/tmp"};var s=["/usr/bin/node"];var l=[];var u="v16.8.0";var c={};var emitWarning=function(e,n){console.warn((n?n+": ":"")+e)};var f=null;var umask=function(e){return 0};var cwd=function(){return"/"};var chdir=function(e){};var p={name:"node",sourceUrl:"",headersUrl:"",libUrl:""};function noop(){}var d=noop;var g=[];var m=null;var h={};var _=false;var b={};var w=null;function _getActiveRequests(){return[]}function _getActiveHandles(){return[]}var x=noop;var k=noop;var cpuUsage=function(){return{}};var E=cpuUsage;var U=cpuUsage;var A=noop;var C=noop;var T=noop;var y={};function assert(e,n){if(!e)throw new Error(n||"assertion error")}var L={inspector:false,debug:false,uv:false,ipv6:false,tls_alpn:false,tls_sni:false,tls_ocsp:false,tls:false,cached_builtins:true};var I=noop;var N=noop;function hasUncaughtExceptionCaptureCallback(){return false}var P=noop;var D=noop;var H=noop;var M=noop;var q=noop;var B=void 0;var R=void 0;var S=void 0;var O=noop;var Q=2;var F=1;var W="/bin/usr/node";var G=9229;var V="node";var j=[];var z=noop;var J={now:"undefined"!==typeof performance?performance.now.bind(performance):void 0,timing:"undefined"!==typeof performance?performance.timing:void 0};if(void 0===J.now){var K=Date.now();J.timing&&J.timing.navigationStart&&(K=J.timing.navigationStart);J.now=()=>Date.now()-K}function uptime(){return J.now()/1e3}var X=1e9;function hrtime(e){var n=Math.floor(.001*(Date.now()-J.now()));var r=.001*J.now();var a=Math.floor(r)+n;var t=Math.floor(r%1*1e9);if(e){a-=e[0];t-=e[1];if(t<0){a--;t+=X}}return[a,t]}hrtime.bigint=function(e){var n=hrtime(e);return"undefined"===typeof BigInt?n[0]*X+n[1]:BigInt(n[0]*X)+BigInt(n[1])};var Y=10;var Z={};var $=0;function on(){return se}var ee=on;var ne=on;var re=on;var ae=on;var te=on;var oe=noop;var ie=on;var ve=on;function listeners(){return[]}var se={version:u,versions:c,arch:o,platform:i,release:p,_rawDebug:d,moduleLoadList:g,binding:f,_linkedBinding:m,_events:Z,_eventsCount:$,_maxListeners:Y,on:on,addListener:ee,once:ne,off:re,removeListener:ae,removeAllListeners:te,emit:oe,prependListener:ie,prependOnceListener:ve,listeners:listeners,domain:h,_exiting:_,config:b,dlopen:w,uptime:uptime,_getActiveRequests:_getActiveRequests,_getActiveHandles:_getActiveHandles,reallyExit:x,_kill:k,cpuUsage:cpuUsage,resourceUsage:E,memoryUsage:U,kill:A,exit:C,openStdin:T,allowedNodeEnvironmentFlags:y,assert:assert,features:L,_fatalExceptions:I,setUncaughtExceptionCaptureCallback:N,hasUncaughtExceptionCaptureCallback:hasUncaughtExceptionCaptureCallback,emitWarning:emitWarning,nextTick:nextTick,_tickCallback:P,_debugProcess:D,_debugEnd:H,_startProfilerIdleNotifier:M,_stopProfilerIdleNotifier:q,stdout:B,stdin:S,stderr:R,abort:O,umask:umask,chdir:chdir,cwd:cwd,env:v,title:t,argv:s,execArgv:l,pid:Q,ppid:F,execPath:W,debugPort:G,hrtime:hrtime,argv0:V,_preload_modules:j,setSourceMapsEnabled:z};export{H as _debugEnd,D as _debugProcess,Z as _events,$ as _eventsCount,_ as _exiting,I as _fatalExceptions,_getActiveHandles,_getActiveRequests,k as _kill,m as _linkedBinding,Y as _maxListeners,j as _preload_modules,d as _rawDebug,M as _startProfilerIdleNotifier,q as _stopProfilerIdleNotifier,P as _tickCallback,O as abort,ee as addListener,y as allowedNodeEnvironmentFlags,o as arch,s as argv,V as argv0,assert,f as binding,chdir,b as config,cpuUsage,cwd,G as debugPort,se as default,w as dlopen,h as domain,oe as emit,emitWarning,v as env,l as execArgv,W as execPath,C as exit,L as features,hasUncaughtExceptionCaptureCallback,hrtime,A as kill,listeners,U as memoryUsage,g as moduleLoadList,nextTick,re as off,on,ne as once,T as openStdin,Q as pid,i as platform,F as ppid,ie as prependListener,ve as prependOnceListener,x as reallyExit,p as release,te as removeAllListeners,ae as removeListener,E as resourceUsage,z as setSourceMapsEnabled,N as setUncaughtExceptionCaptureCallback,R as stderr,S as stdin,B as stdout,t as title,umask,uptime,u as version,c as versions};

